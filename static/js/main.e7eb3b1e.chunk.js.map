{"version":3,"sources":["components/Timer/Timer.js","components/TimerPropsInput/TimerPropsInput.js","components/App.js","index.js"],"names":["Timer","state","time","props","startTime","isRun","tick","clearInterval","timer","setInterval","setState","prevState","step","renderTime","className","Math","floor","renderBtn","renderProgressBar","style","width","btnToogle","this","onTimerCreate","onTimeStart","onTimePause","onTimeEnd","onTimerDeleted","id","onClick","React","Component","TimerPropsInput","type","onChange","onChangeCheck","value","onChangeInput","selectStep","App","autorun","timerState","renderTimer","e","renderBtnName","setTimeout","setTime","target","autorunToogle","onClickBtn","timerToogle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7eb3b1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Timer extends React.Component{\r\n  state= {\r\n    time: this.props.time,\r\n    startTime: this.props.time,\r\n    isRun: this.props.isRun\r\n  }\r\n\r\n  tick = () =>{\r\n    if(this.state.isRun && this.state.time > 0){\r\n      clearInterval(this.timer);\r\n\r\n      this.timer = setInterval(() => this.setState (prevState => (prevState.time > 0) ? {time: (prevState.time - this.props.step)} : clearInterval(this.timer))\r\n      , this.props.step);\r\n      \r\n    } else {\r\n      clearInterval(this.timer);\r\n    }\r\n  } \r\n\r\n  renderTime = (time, className) => (this.state.time < 0) ?\r\n  <div>\r\n    <span>00:</span>\r\n    <span>00</span>\r\n    <span>{(this.props.step < 1000) ? ':0' : ''}</span>\r\n  </div>\r\n  :\r\n  <div>\r\n    <span>{(Math.floor(time / (1000 * 60)) < 10) ? '0' + Math.floor(time / (1000 * 60)) : Math.floor(time / (1000 * 60))}:</span>\r\n    <span>{(Math.floor((time % (1000 * 60)) / 1000) < 10) ? \"0\" + Math.floor((time % (1000 * 60)) / 1000) : Math.floor((time % (1000 * 60)) / 1000)}</span>\r\n    <span>{(this.props.step < 1000) ? ':' + Math.floor(time % 1000 / 100) : ''}</span>\r\n  </div>\r\n  \r\n  renderBtn = () => {\r\n    this.tick();\r\n    return (this.state.isRun) ? <span>Stop</span> : <span>Start</span> \r\n  } \r\n\r\n  renderProgressBar = () =>{\r\n    return (\r\n      <div className=\"progress-bar\" style={{width: this.state.time / this.state.startTime * 100 + \"%\"}}></div>\r\n    );\r\n  }\r\n\r\n  btnToogle = () =>this.setState({isRun: !this.state.isRun});\r\n\r\n  componentDidMount(){\r\n    this.props.onTimerCreate();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    (this.state.isRun) ? this.props.onTimeStart() : this.props.onTimePause();\r\n      \r\n    if(this.state.time <= 0) {\r\n      this.props.onTimeEnd();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.props.onTimerDeleted();\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"timer-wrap\">\r\n        {this.renderTime(this.state.time, 'timer')}\r\n        <button \r\n          className=\"btn\"\r\n          id=\"timer-btn\" \r\n          onClick={() => {\r\n            this.btnToogle();\r\n          }}>\r\n          {this.renderBtn()}\r\n        </button>\r\n        {this.renderProgressBar()}\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\n\r\nconst TimerPropsInput = (props) => {\r\n  return(\r\n    <div className=\"props-panel\">\r\n      <div className=\"checkbox\">\r\n        <label>Auto run </label>\r\n        <input type=\"checkbox\" \r\n          className=\"control__autorun\"\r\n          id=\"auto-run\" \r\n          onChange ={props.onChangeCheck}  />          \r\n      </div>\r\n\r\n      <div>\r\n        <input type=\"number\" \r\n          className=\"control__time\" \r\n          id=\"time\"\r\n          value = {props.time} \r\n          onChange ={props.onChangeInput}\r\n        />\r\n        <span>ms</span>\r\n      </div>\r\n      \r\n      <select value={props.step} onChange={props.selectStep}>\r\n        <option value=\"1000\">1sec</option>\r\n        <option value=\"100\">100ms</option>\r\n        <option value=\"2000\">2sec</option>\r\n        <option value=\"10000\">10sec</option>\r\n      </select>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerPropsInput; ","import React from 'react';\r\nimport Timer from './Timer/Timer';\r\nimport TimerPropsInput from './TimerPropsInput/TimerPropsInput';\r\nimport './App.scss';\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    time : 10000,\r\n    autorun : false,\r\n    step : 1000,\r\n    timerState : '',\r\n    timer : ''\r\n  };\r\n\r\n  renderTimer = e => this.setState( prevState => prevState.timer ? {timer: ''} : {timer: <Timer \r\n      onTimerCreate={this.onTimerCreate}\r\n      onTimeEnd={this.onTimeEnd}\r\n      onTimeStart={this.onTimeStart}\r\n      onTimePause={this.onTimePause}\r\n      onTimerDeleted={this.onTimerDeleted}\r\n      time={this.state.time}\r\n      isRun={this.state.autorun}\r\n      step={this.state.step}\r\n  />});\r\n\r\n  renderBtnName = () => this.state.timer ? 'Delete timer' : 'Create timer';\r\n\r\n  onTimerCreate = () => this.setState({timerState : <h3>Timer was created</h3>});  \r\n\r\n  onTimeEnd = () => {\r\n    setTimeout(this.renderTimer,5000)\r\n\r\n    return this.setState({timerState : <h3>Time is out</h3>})\r\n  };\r\n\r\n  onTimeStart = () => this.setState({timerState : <h3>Timer running</h3>});\r\n\r\n  onTimePause = () => this.setState({timerState : <h3>Timer stopped</h3>});\r\n\r\n  onTimerDeleted = () => this.setState({timerState : <h3>Timer was deleted</h3>});\r\n  \r\n  setTime = e => this.setState({time : (e.target.value >= 0) ? e.target.value : 0});\r\n\r\n  autorunToogle = e => this.setState(prevState => {\r\n    return {autorun : !prevState.autorun };\r\n  }); \r\n\r\n  selectStep = e => this.setState({step: e.target.value});\r\n  \r\n  render(){\r\n    return (\r\n    <div className=\"container\">\r\n      <TimerPropsInput \r\n        onClickBtn={this.timerToogle}\r\n        onChangeInput={this.setTime} \r\n        onChangeCheck={this.autorunToogle}\r\n        selectStep={this.selectStep}\r\n        time={this.state.time}\r\n        step={this.state.step}\r\n      />\r\n      <button className=\"btn\" onClick={this.renderTimer}>\r\n        {this.renderBtnName()}\r\n      </button>\r\n      {this.state.timerState}\r\n      {this.state.timer}\r\n    </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}